(()=>{"use strict";var n={772:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),i=t.n(o),r=t(645),A=t.n(r)()(i());A.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&display=swap);"]),A.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: 0;\n\n    font-size: 24px;\n    font-family: 'Roboto', sans-serif;\n}\n\nhtml,\nbody {\n    height: 100vh;\n}\n\n/* --- Navbar with drop down --- */\n.navbar {\n    display: grid;\n    width: 100%;\n    height: 100px;\n    align-items: center;\n    justify-items: center;\n    margin-top: 25px;\n}\n\n.navbar-content {\n    display: flex;\n    min-width: fit-content;\n    gap: 20px;\n    height: inherit;\n    align-items: center;\n    justify-content: space-evenly;\n    width: 65%;\n    background-color: #d4d4d4;\n    border-radius: 25px;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n}\n\n/* Making sure services btn and drop down is- */\n/* relative to elements around it. */\n.services-btn-and-dropdown {\n    position: relative;\n}\n\n.services-dropdown {\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n    position: absolute;\n    top: 100%;\n    height: fit-content;\n    min-width: fit-content;\n    padding: 15px;\n    margin-top: 40px;\n    white-space: nowrap;\n    background-color: #e2e8f0;\n    border-radius: 10px;\n\n    /* Before animation */\n    opacity: 0;\n    visibility: hidden;\n    transform: translateY(-10px);\n    transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;\n}\n\n.services-btn,\n.item-four-btn,\n.item-three-btn {\n    /* Resetting defaults of btn */\n    padding: 0;\n    border: none;\n    background: none;\n\n    cursor: pointer;\n}\n\n.navbar-content a {\n    text-decoration: none;\n    color: black;\n}\n\n.item-four-btn-and-dropdown,\n.item-three-btn-and-dropdown {\n    display: flex;\n}\n\n.item-four-dropdown,\n.item-three-dropdown {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    position: absolute;\n    left: 100%;\n    padding: 15px;\n    border-radius: 10px;\n    height: fit-content;\n    min-width: fit-content;\n    background-color: #e2e8f0;\n}\n\n.services-dropdown,\n.item-four-dropdown,\n.item-three-dropdown {\n    /* Before animation */\n    opacity: 0;\n    visibility: hidden;\n    transform: translateY(-10px);\n    transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;\n}\n\n.show-dropdown {\n    /* After animation */\n    opacity: 1;\n    visibility: visible;\n    transform: translateY(0);\n}\n\n/* --- Mobile menu --- */\n.hamburger-btn-container {\n    position: absolute;\n    height: fit-content;\n    padding: 25px;\n    /* Upping element hierarchy. */\n    z-index: 5;\n}\n\n.hamburger-btn,\n.mob-btn-services {\n    border: none;\n    background: none;\n    padding: none;\n    font-size: 32px;\n    cursor: pointer;\n}\n\n.center-logo-and-quote {\n    display: flex;\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n}\n\n.center-logo-and-quote p:nth-child(1) {\n    color: blue;\n    font-size: 32px;\n}\n\n.mobile-menu {\n    display: none;\n    height: inherit;\n    gap: 50px;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.mobile-menu a {\n    text-decoration: none;\n    color: black;\n    font-size: 32px;\n}\n\n.mob-services-dropdown a {\n    font-size: 24px;\n}\n\n.mobile-services {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.mob-services-dropdown {\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAEA;IACI,SAAS;IACT,UAAU;IACV,aAAa;;IAEb,eAAe;IACf,iCAAiC;AACrC;;AAEA;;IAEI,aAAa;AACjB;;AAEA,kCAAkC;AAClC;IACI,aAAa;IACb,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,eAAe;IACf,mBAAmB;IACnB,6BAA6B;IAC7B,UAAU;IACV,yBAAyB;IACzB,mBAAmB;IACnB,2CAA2C;AAC/C;;AAEA,+CAA+C;AAC/C,oCAAoC;AACpC;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,kBAAkB;IAClB,SAAS;IACT,mBAAmB;IACnB,sBAAsB;IACtB,aAAa;IACb,gBAAgB;IAChB,mBAAmB;IACnB,yBAAyB;IACzB,mBAAmB;;IAEnB,qBAAqB;IACrB,UAAU;IACV,kBAAkB;IAClB,4BAA4B;IAC5B,wEAAwE;AAC5E;;AAEA;;;IAGI,8BAA8B;IAC9B,UAAU;IACV,YAAY;IACZ,gBAAgB;;IAEhB,eAAe;AACnB;;AAEA;IACI,qBAAqB;IACrB,YAAY;AAChB;;AAEA;;IAEI,aAAa;AACjB;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,kBAAkB;IAClB,UAAU;IACV,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,sBAAsB;IACtB,yBAAyB;AAC7B;;AAEA;;;IAGI,qBAAqB;IACrB,UAAU;IACV,kBAAkB;IAClB,4BAA4B;IAC5B,wEAAwE;AAC5E;;AAEA;IACI,oBAAoB;IACpB,UAAU;IACV,mBAAmB;IACnB,wBAAwB;AAC5B;;AAEA,wBAAwB;AACxB;IACI,kBAAkB;IAClB,mBAAmB;IACnB,aAAa;IACb,8BAA8B;IAC9B,UAAU;AACd;;AAEA;;IAEI,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,mBAAmB;IACnB,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,SAAS;IACT,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;IACrB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;AAC3B",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: 0;\n\n    font-size: 24px;\n    font-family: 'Roboto', sans-serif;\n}\n\nhtml,\nbody {\n    height: 100vh;\n}\n\n/* --- Navbar with drop down --- */\n.navbar {\n    display: grid;\n    width: 100%;\n    height: 100px;\n    align-items: center;\n    justify-items: center;\n    margin-top: 25px;\n}\n\n.navbar-content {\n    display: flex;\n    min-width: fit-content;\n    gap: 20px;\n    height: inherit;\n    align-items: center;\n    justify-content: space-evenly;\n    width: 65%;\n    background-color: #d4d4d4;\n    border-radius: 25px;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n}\n\n/* Making sure services btn and drop down is- */\n/* relative to elements around it. */\n.services-btn-and-dropdown {\n    position: relative;\n}\n\n.services-dropdown {\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n    position: absolute;\n    top: 100%;\n    height: fit-content;\n    min-width: fit-content;\n    padding: 15px;\n    margin-top: 40px;\n    white-space: nowrap;\n    background-color: #e2e8f0;\n    border-radius: 10px;\n\n    /* Before animation */\n    opacity: 0;\n    visibility: hidden;\n    transform: translateY(-10px);\n    transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;\n}\n\n.services-btn,\n.item-four-btn,\n.item-three-btn {\n    /* Resetting defaults of btn */\n    padding: 0;\n    border: none;\n    background: none;\n\n    cursor: pointer;\n}\n\n.navbar-content a {\n    text-decoration: none;\n    color: black;\n}\n\n.item-four-btn-and-dropdown,\n.item-three-btn-and-dropdown {\n    display: flex;\n}\n\n.item-four-dropdown,\n.item-three-dropdown {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    position: absolute;\n    left: 100%;\n    padding: 15px;\n    border-radius: 10px;\n    height: fit-content;\n    min-width: fit-content;\n    background-color: #e2e8f0;\n}\n\n.services-dropdown,\n.item-four-dropdown,\n.item-three-dropdown {\n    /* Before animation */\n    opacity: 0;\n    visibility: hidden;\n    transform: translateY(-10px);\n    transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;\n}\n\n.show-dropdown {\n    /* After animation */\n    opacity: 1;\n    visibility: visible;\n    transform: translateY(0);\n}\n\n/* --- Mobile menu --- */\n.hamburger-btn-container {\n    position: absolute;\n    height: fit-content;\n    padding: 25px;\n    /* Upping element hierarchy. */\n    z-index: 5;\n}\n\n.hamburger-btn,\n.mob-btn-services {\n    border: none;\n    background: none;\n    padding: none;\n    font-size: 32px;\n    cursor: pointer;\n}\n\n.center-logo-and-quote {\n    display: flex;\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n}\n\n.center-logo-and-quote p:nth-child(1) {\n    color: blue;\n    font-size: 32px;\n}\n\n.mobile-menu {\n    display: none;\n    height: inherit;\n    gap: 50px;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.mobile-menu a {\n    text-decoration: none;\n    color: black;\n    font-size: 32px;\n}\n\n.mob-services-dropdown a {\n    font-size: 24px;\n}\n\n.mobile-services {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.mob-services-dropdown {\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}"],sourceRoot:""}]);const a=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(A[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);o&&A[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},A=[],a=0;a<n.length;a++){var s=n[a],c=o.base?s[0]+o.base:s[0],d=r[c]||0,p="".concat(c," ").concat(d);r[c]=d+1;var l=t(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var f=i(u,o);o.byIndex=a,e.splice(a,0,{identifier:p,updater:f,references:1})}A.push(p)}return A}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var r=o(n=n||[],i=i||{});return function(n){n=n||[];for(var A=0;A<r.length;A++){var a=t(r[A]);e[a].references--}for(var s=o(n,i),c=0;c<r.length;c++){var d=t(r[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),i=t.n(o),r=t(569),A=t.n(r),a=t(565),s=t.n(a),c=t(216),d=t.n(c),p=t(589),l=t.n(p),u=t(772),f={};f.styleTagTransform=l(),f.setAttributes=s(),f.insert=A().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=d(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;const m=function(n,e,t){n.addEventListener("click",(()=>{const n=getComputedStyle(e).display;e.style.display="flex"===n?"none":"flex",t.style.display="flex"===n?"flex":"none"}))},B=function(n,e){n.addEventListener("click",(()=>{const n=getComputedStyle(e).display;e.style.display="flex"===n?"none":"flex"}))};!function(){const n=document.querySelector(".hamburger-btn"),e=document.querySelector(".center-logo-and-quote"),t=document.querySelector(".mobile-menu");m(n,e,t)}(),function(){const n=document.querySelector(".mob-services-dropdown"),e=document.querySelector(".mob-btn-services");B(e,n)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,